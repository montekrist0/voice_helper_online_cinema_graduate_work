version: '3.8'
services:
  db:
    image: postgres:14
    container_name: db_container
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 2s
      timeout: 2s
      retries: 5
    restart: on-failure
    volumes:
      - postgresql_volume_compose:/var/lib/postgresql/data
      - ./etl/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    expose:
      - 5432

  vh_mongo_db:
    image: mongo:6.0.5-jammy
    restart: always
    expose:
      - "27017"
    env_file:
      - ./.env
    volumes:
      - ./db/mongo:/docker-entrypoint-initdb.d

  nginx:
    image: nginx:1.22.1
    container_name: nginx_container
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - static:/data/static
    depends_on:
      - vh_app
    ports:
      - "80:80"
    restart: always

  redis:
    image: redis:7.0.7
    container_name: redis_container
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - redis_volume:/data
    expose:
      - 6379

  elastic:
    image: elasticsearch:8.5.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - USE_SSL=false
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:9200 | grep -q 'HTTP/1.1 200 OK'",
        ]
      interval: 1s
      timeout: 5s
      retries: 120
    container_name: elastic_compose
    expose:
      - 9200
    volumes:
      - elastic_volume_compose:/usr/share/elasticsearch/data

  etl:
    build:
      context: ./etl/
    image: etl-image
    env_file:
      - ./.env
    depends_on:
      redis:
        condition: service_healthy
      elastic:
        condition: service_healthy
    container_name: etl_container
    restart: unless-stopped

  vh_app:
    build:
      context: ./voice_helper_app
    image: vh_app-image
    env_file:
      - ./.env
    restart: unless-stopped
    volumes:
      - static:/home/app/fastapi/templates/static
    depends_on:
      elastic:
        condition: service_healthy
      vh_mongo_db:
        condition: service_started
    expose:
      - 8001

volumes:
  postgresql_volume_compose:
  redis_volume:
  elastic_volume_compose:
  kibana_volume_compose:
  static:
